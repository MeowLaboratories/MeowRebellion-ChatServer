/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author rb101
 */
public class signup extends javax.swing.JFrame {

    /**
     * Creates new form signup
     */
    static signup sp;

    static String[] users = new String[100];
    static String[] emails = new String[100];
    static String[] password = new String[100];
    static int numUsers;

    public signup() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newEmailField = new javax.swing.JTextField();
        newUserField = new javax.swing.JTextField();
        newPassField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        signupButton = new javax.swing.JButton();
        authLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(284, 486));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Join the Rebellion");

        jLabel2.setText("E-mail");

        jLabel3.setText("User Name");

        jLabel4.setText("Password");

        signupButton.setText("Sign Up");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        backButton.setText("<< Go back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newEmailField)
                    .addComponent(newUserField)
                    .addComponent(newPassField))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(authLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(signupButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(authLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(newUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(signupButton)
                .addGap(48, 48, 48)
                .addComponent(backButton)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        // TODO add your handling code here:
        String email, pass, usr;
        try {
            email = newEmailField.getText();
            pass = newPassField.getText();
            usr = newUserField.getText();

            if (usr.length() == 0 || email.length() == 0 || pass.length() == 0) {

                authLabel.setText("Why would you do that?");
                authLabel.setForeground(Color.red);

            } else if(usr.contains(" ")) {
                authLabel.setText("Space not allowed");
                authLabel.setForeground(Color.red);

            }
            else {
                //authLabel.setText("Authenticating...");

                if (add_user(usr, email, pass) == true) {
                    authLabel.setText("successfull!");
                    authLabel.setForeground(Color.green);
                    this.setVisible(false);
                    loginPage.lp.setVisible(true);

                } else {

                    //authLabel.setText("Who are you? poha!");
                    //authLabel.setForeground(Color.red);
                }
            }
        } catch (NullPointerException e) {

            authLabel.setText("Why would you do that?");
            authLabel.setForeground(Color.red);
            e.printStackTrace();
        }

    }//GEN-LAST:event_signupButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
         loginPage.lp.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showSignUp() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                sp = new signup();
                sp.setVisible(true);
            }
        });
    }

    //adding users: from chat clinet, writing to DB
    public boolean add_user(String usrName, String e_mail, String pass) {
        boolean valid = false;
        final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
        final String DB_URL = "jdbc:mysql://**************.com/panda_riboDB";

        //  Database credentials
        final String USER = "panda_ribo";
        final String PASS = "***************8";

        Connection conn = null;
        Statement stmt = null;

        try {
            //STEP 2: Register JDBC driver
            Class.forName("com.mysql.jdbc.Driver");
            //STEP 3: Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
        } catch (Exception e) {
            System.out.println("JDBC connection failed");
        }

        //calling update user
        update_user(conn);
        //checking
        if (check_user(usrName, e_mail) == true) {
            try {
                System.out.println("Adding user to DB...");
                stmt = conn.createStatement();
                String sql;
                sql = "INSERT INTO client(client_id, username, email, password)" + "VALUES (" + ++signup.numUsers + ",'" + usrName + "', '" + e_mail + "', '" + pass + "')";

                stmt.executeUpdate(sql);

                stmt.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (stmt != null) {
                        stmt.close();
                    }
                } catch (SQLException se2) {
                }

            }
            valid = true;
        }

        try {
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException se) {
            se.printStackTrace();
        }

        return valid;

    }

    //checking if users exist
    public boolean check_user(String usrName, String email) {
        boolean valid = true;

        for (int i = 1; i <= signup.numUsers; i++) {
            String a = signup.users[i];
            String b = signup.emails[i];

            if (a.contains(usrName) && a.length() == usrName.length()) {
                System.out.println("Sorry, This user name is already taken.");
                authLabel.setText("User Name Taken");
                authLabel.setForeground(Color.red);
                valid = false;
            }

            if (b.contains(email) && b.length() == email.length()) {
                System.out.println("This e-mail id belongs to another account.");
                authLabel.setText("E-mail taken");
                authLabel.setForeground(Color.red);
                valid = false;
            }

        }
        return valid;
    }

    public void update_user(Connection conn) {
        Statement stmt = null;
        try {
            //System.out.println("Updating users...");
            stmt = conn.createStatement();
            String sql;
            sql = "SELECT client_id, username, email, password FROM client";
            ResultSet rs = stmt.executeQuery(sql);
            int client_id = 0;
            while (rs.next()) {
                //Retrieve by column name
                client_id = rs.getInt("client_id");
                String usrName = rs.getString("username");
                String e_mail = rs.getString("email");
                String password = rs.getString("password");

                signup.users[client_id] = usrName;
                signup.emails[client_id] = e_mail;
                signup.password[client_id] = password;

                System.out.println(usrName);
                System.out.println(e_mail);
                System.out.println(password);

            }
            signup.numUsers = client_id;
            rs.close();
            stmt.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField newEmailField;
    private javax.swing.JTextField newPassField;
    private javax.swing.JTextField newUserField;
    private javax.swing.JButton signupButton;
    // End of variables declaration//GEN-END:variables
}
